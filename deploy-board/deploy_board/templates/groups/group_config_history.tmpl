{% load utils %}
{% load static %}

{% regroup configs|dictsort:'type' by type as configsByType %}
<div class="modal fade" id="filterConfigModalId" tabindex="-1" role="dialog" aria-labelledby="deleteClusterModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <form id="filterConfigTypesFormId">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title">Filter Config Type</h4>
                </div>

                <div class="modal-body" id="newMetricModal">
                    <p>Select which config types to display</p>

                    {% for config in configsByType %}
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="exclude" value="{{ config.grouper }}" id="{{ config.grouper }}"
                        {% if config.grouper not in excludedTypes %} checked {% else %} '' {% endif %}>
                        <label class="form-check-label" for="{{ config.grouper }}">
                            {{config.grouper}}
                        </label>
                    </div>
                    {% endfor %}

                </div>

                <div class="modal-footer">
                    <button id="addMetricBtnId" type="submit" class="btn btn-primary">Save</button>
                    <button id="modalCloseBtnId" type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
                {% csrf_token %}
            <form> 
        </div>
    </div>
</div>

<form name="asg_config_history_list">
    <table id="asgConfigHistoryTableId" class="table table-condensed table-striped table-hover">
        <tr>
            <th class="col-sm-1"></th>
            <th class="col-lg-2">Time</th>
            <th class="col-lg-1">Operator</th>
            <th class="col-lg-2">
                Type
                <span class="fa fa-filter btn btn-xs {% if excludedTypes|length > 0 %} bg-info {% else %} btn-default {% endif %}" data-toggle="modal" data-target="#filterConfigModalId" />
            </th>
            <th class="col-lg-4">Configuration Change</th>
        </tr>
        {% for config in configs %}
        {% if config.type not in excludedTypes %}
        <tr>
            <td>
                <input type="checkbox" value="{{ config.type }}_{{ config.replaced_config }}" name="chkbox_{{ config.changeId }}">
            </td>
            <td>
                <a class="pointer-cursor" data-toggle="collapse" data-target="#historyAction{{forloop.counter}}">
                <span id="historyAction{{forloop.counter}}Toggler" class="glyphicon glyphicon-chevron-right">
                </span>
                {{ config.createTime | convertTimestamp }}
                </a>
            </td>

            <td> {{ config.operator }} </td>
            <td> {{ config.type }}  </td>
            <td> {{ config.configChange }} </td>
        </tr>
         <tr id="historyAction{{forloop.counter}}" class="collapse out historyActionPanel">
            <td></td>
            <td colspan="4">
                <div class="row">
                    {% if forloop.counter > 1 %}
                    <!-- TODO config rollback
                    -->
                    {% endif %}
                </div>
            </td>
        </tr>
        {% endif %}
        {% endfor %}
    </table>
     <button type="button" id="compareConfigsBtn" class="btn btn-default">Compare configs in new tab</button>
</form>

<script>
    $('#compareConfigsBtn').attr('disabled','disabled');

    jQuery(function(){
        var maxCheckedAllowed = 2;
        var checkboxes = $('#asgConfigHistoryTableId input[type="checkbox"]');
            checkboxes.change(function(){
                var numChecked = checkboxes.filter(':checked').length;
                checkboxes.filter(':not(:checked)').prop('disabled', numChecked >= maxCheckedAllowed);
                if(numChecked == 2) {
                    $('#compareConfigsBtn').removeAttr('disabled');
                } else {
                    $('#compareConfigsBtn').attr('disabled','disabled');
                }
            });
    });

    $('#compareConfigsBtn').click(function () {
        var btn = $(this);
        $.ajax({
            type: 'POST',
            url: '/groups/{{ group_name }}/get_config_comparison/',
            data: $(':input').serializeArray(),
            success: function (data) {
                var change1 = data['change1'];
                var change2 = data['change2'];
                var newUrl = "/groups/{{ group_name }}/show_config_comparison/?change1=".concat(change1);
                newUrl = newUrl.concat("&change2=");
                newUrl = newUrl.concat(change2);

                var win = window.open(newUrl, '_blank');
                if(win) {
                    win.focus()
                } else {
                    alert("Please allow Teletraan to send you pop ups.")
                }
            }
        });
    });

    $('.historyActionPanel').on('hidden.bs.collapse shown.bs.collapse', function () {
            var currentId = $(this).attr('id');
            $('#' + currentId + 'Toggler').toggleClass('glyphicon-chevron-right glyphicon-chevron-down', 100);
        });

    $("#filterConfigTypesFormId").submit(function (e) {
        e.preventDefault()
        e.stopPropagation() 

        const filteredOutTypes = [];
        $('#filterConfigTypesFormId input[type="checkbox"]:not(:checked)').each(function(a){
            filteredOutTypes.push($(this).val());
        });

        const queryString = `exclude=${filteredOutTypes.join()}`
        const url = '/groups/{{ group_name }}/config_history/?' + queryString
        window.location=url;
    });

    $("#filterConfigModalId").on('hide.bs.modal', function(){
        $("#filterConfigTypesFormId").trigger('reset');
    });
</script>

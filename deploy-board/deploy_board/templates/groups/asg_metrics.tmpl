{% load utils %}
{% include "panel_heading.tmpl" with panel_title="Scaling Alarms" panel_body_id="asMetricsId" direction="down" %}
<div id="asMetricsId" class="collapse in panel-body">
<script>
var ALARM_WARNING_THRESHOLD = 70;
var ALARM_WARNING_TEXT = `CPUUtilization > ${ALARM_WARNING_THRESHOLD}% is recommended only for applications that are less latency sensitive. Load testing to determine an appropriate threshold is strongly encouraged.`;
</script>
{% for alarm in alarms %}
    <div class="panel-heading clearfix">
        <h4 class="panel-title pull-left pointer-cursor">
            <a data-toggle="collapse" style="line-height:2.0;" data-target="panelBodyId_{{ alarm.actionType | actionTypeTitle }}">
                {{ alarm.actionType | actionTypeHead }}
            </a>
        </h4>
        <div>
            <button id="deleteItem_{{ alarm.alarmId }}" type="button" style="float:right; margin-left:6px;" class="delete_button metricDeleteBtn btn btn-primary">Delete</button>
        </div>
    </div>
    <div class="container-fluid" id="alarm_{{ alarm.alarmId }}" >
        <form id="asMetricsIdFormId" class="form-horizontal" role="form">
            <fieldset id="envConfigFieldSetId">
                <div class="form-group">
                    <input type="hidden" name="TELETRAAN_{{ alarm.alarmId }}" value="TELETRAAN_{{ alarm.alarmId }}"/>
                    <input type="hidden" name="actionType_{{ alarm.alarmId }}" value="{{ alarm.actionType }}"/>
                    <input type="hidden" name="fromAwsMetric_{{ alarm.alarmId }}" value="{{ alarm.fromAwsMetric }}"/>
                    <label for="scaleUpSize" class="deployToolTip control-label col-xs-2"
                        data-toggle="tooltip"
                        title="">
                        {% if alarm.fromAwsMetric %}
                            AWS Metric:
                        {% else %}
                            Custom Metric (works with simple scaling only):
                        {% endif %}
                    </label>
                    <div class="col-xs-10">
                        <input class="form-control" name="metricsUrl_{{ alarm.alarmId }}" required="true"
                                type="text" v-model="metrics"/>
                    </div>
                </div>

                <div class="form-group">
                    <label for="value" class="deployToolTip control-label col-xs-2" data-toggle="tooltip">
                    When value:
                    </label>

                    <div class="col-xs-1">
                        <select class="form-control" name="comparator_{{ alarm.alarmId }}" v-model="comparator" @change="showWarningIfNeeded">
                            <option v-for="cmp in comparators" :value="cmp.value">[[ cmp.symbol ]]</option>
                        </select>
                    </div>
                    <div class="col-xs-3">
                    <input class="form-control" name="threshold_{{ alarm.alarmId }}" required="true" @change="showWarningIfNeeded"
                               type="text" v-model="threshold"/>
                    </div>
                    <label class="deployToolTip control-label col-xs-1">
                     for
                    </label>
                    <div class="col-xs-2">
                    <div class="input-group">
                        <input class="form-control" name="evaluateTime_{{ alarm.alarmId }}" required="true"
                               type="text" value="{{ alarm.evaluationTime }}"/>

                        <span class="input-group-addon">minutes</span>
                    </div>
                    </div>
                      <label class="deployToolTip control-label col-xs-2">
                     Then {{ alarm.actionType | actionTypeTitle }} the group
                    </label>
                </div>

                <div class="form-group">
                    <div class="form-group">
                        {% if alarm.scalingType %}
                            {% if alarm.scalingType == "StepScaling" %}
                                <label class="col-xs-2">Simple Scaling</label>
                                <input class="col-xs-1" type="radio" name="policyType_{{ alarm.alarmId }}" value="simple-scaling">
                                <label class="col-xs-2">Step Scaling</label>
                                <input class="col-xs-1" type="radio" name="policyType_{{ alarm.alarmId }}" value="step-scaling" checked>
                            {% else %}
                                <label class="col-xs-2">Simple Scaling</label>
                                <input class="col-xs-1" type="radio" name="policyType_{{ alarm.alarmId }}" value="simple-scaling" checked>
                                <label class="col-xs-2">Step Scaling</label>
                                <input class="col-xs-1" type="radio" name="policyType_{{ alarm.alarmId }}" value="step-scaling">
                            {% endif %}
                        {% else %}
                            <label class="col-xs-2">Simple Scaling</label>
                            <input class="col-xs-1" type="radio" name="policyType_{{ alarm.alarmId }}" value="simple-scaling">
                            <label class="col-xs-2">Step Scaling</label>
                            <input class="col-xs-1" type="radio" name="policyType_{{ alarm.alarmId }}" value="step-scaling">
                        {% endif %}
                    </div>
                </div>
                
                <form-warning v-show="showWarning" :alert-text="warning"></form-warning>
            </fieldset>
            {% csrf_token %}
        </form>
    </div>
<script>
$(function() {
    $('#deleteItem_{{alarm.alarmId}}').click(function () {
                var btn = $(this);
                $.ajax({
                    type: 'POST',
                    url: '/groups/{{ group_name }}/autoscaling/delete_metrics/',
                    data: {'csrfmiddlewaretoken': '{{csrf_token}}',
                           'alarmId': '{{alarm.alarmId}}'},
                    datatype: 'json',
                    beforeSend: function () {
                        btn.button('loading');
                    },
                    success: function (data) {
                        btn.button('reset');
                        $("#asMetricsId").parent().html(data);
                    }
                });
    });
});

let alarmVue = new Vue({
    el: "#alarm_{{ alarm.alarmId }}",
    delimiters: ['[[', ']]'],
    data: {
        comparators: {{ comparators|safe }},
        comparator: "{{ alarm.comparator }}",
        metrics: "{{ alarm.metricSource }}",
        showWarning: false,
        warning: ALARM_WARNING_TEXT,
        threshold: {{ alarm.threshold }},
    },
    methods: {
        showWarningIfNeeded: function() {
            if (this.metrics == "CPUUtilization"  && this.threshold > ALARM_WARNING_THRESHOLD
                && (this.comparator == "GreaterThanOrEqualToThreshold" || this.comparator == "GreaterThanThreshold")) {
                this.showWarning = true;
            } else {
                this.showWarning = false;
            }
        },
    },
});

</script>
{% endfor %}
</div>

<div id="new-entry-id"></div>

<div class="panel-footer clearfix">
    <div class="pull-right">
        <button id="resetAsMetricsBtnId" class="btn btn-default"
                data-loading-text="Reloading...">
            <span class="glyphicon glyphicon-refresh"></span> Reload
        </button>
        <button id="saveAsMetricsBtnId" class="btn btn-primary"
                data-loading-text="Saving...">
            <span class="glyphicon glyphicon-floppy-save"></span> Save
        </button>
        <button id="addNewMetricsBtnId" class="btn btn-primary"
                data-loading-text="Creating...">
                Add Alarm
        </button>
    </div>
</div>
<script>
    $(function () {
        $('#saveAsMetricsBtnId').attr('disabled','disabled');
        $('#resetAsMetricsBtnId').attr('disabled','disabled');

        $('#asMetricsIdFormId input').keyup(function() {
            $('#saveAsMetricsBtnId').removeAttr('disabled');
            $('#resetAsMetricsBtnId').removeAttr('disabled');
        });

        $('#asMetricsIdFormId select').change(function() {
            $('#saveAsMetricsBtnId').removeAttr('disabled');
            $('#resetAsMetricsBtnId').removeAttr('disabled');
        });

        $('#asMetricsIdFormId input').change(function() {
            $('#saveAsMetricsBtnId').removeAttr('disabled');
            $('#resetAsMetricsBtnId').removeAttr('disabled');
        });

        $('#addNewMetricsBtnId').click(function () {
            $('#newEntryModalId').modal()
            $('#saveConfigMapBtnId').removeAttr('disabled');
            $('#resetConfigMapBtnId').removeAttr('disabled');
        });

        $('#saveAsMetricsBtnId').click(function () {
            var btn = $(this);
            $.ajax({
                type: 'POST',
                url: '/groups/{{ group_name }}/autoscaling/update_metrics/',
                data: $(':input').serializeArray(),
                beforeSend: function () {
                    btn.button('loading');
                },
                success: function (data) {
                    if(data != null && data.success == false) {
                        $('#errorBannerId').append(data.error);
                        $('#errorBannerId').show();
                    } else {
                        $("#asMetricsId").parent().html(data);
                        $('#errorBannerId').empty().hide();
                    }
                    btn.button('reset');
                },
                error: function (data) {
                    $('#errorBannerId').append(data.responseText);
                    $('#errorBannerId').show();
                }
            });
        });

        $('#resetAsMetricsBtnId').click(function () {
            var btn = $(this);
            $.ajax({
                type: 'GET',
                url: '/groups/{{ group_name }}/autoscaling/get_metrics/',
                beforeSend: function () {
                    btn.button('loading');
                },
                success: function (data) {
                    btn.button('reset');
                    $("#asMetricsId").parent().html(data);
                }
            });
        });
    });
</script>

<script>
    const comparatorsOptions = {{ comparators|safe }};

    let newMetricsVue = new Vue({
        el: "#newEntryModalId",
        delimiters: ['[[', ']]'],
        data: {
            comparators: comparatorsOptions,
            comparator: comparatorsOptions[0].value,
            awsMetricNames: {{ aws_metric_names|safe }},
            metrics: "",
            showWarning: false,
            warning: ALARM_WARNING_TEXT,
            threshold: "",
            useCustomMetric: false,
        },
        methods: {
            showWarningIfNeeded: function() {
                if (this.metrics == "CPUUtilization"  && this.threshold > ALARM_WARNING_THRESHOLD && !this.useCustomMetric
                    && (this.comparator == "GreaterThanOrEqualToThreshold" || this.comparator == "GreaterThanThreshold")) {
                    this.showWarning = true;
                } else {
                    this.showWarning = false;
                }
            },
        },
    });
 </script>

<div class="modal fade" id="newEntryModalId" tabindex="-1" role="dialog" aria-labelledby="newEntryModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="newEntryFormId" class="form-horizontal" method="post" role="form" action="/groups/{{ group_name }}/autoscaling/add_metrics/">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span>
                    </button>
                    <h4 class="modal-title" id="newEnvModalLabel">Add new autoscaling alarm</h4>
                </div>
                <div class="modal-body" id="newMetricModal">
                    <div class="form-group">
                        <label for="asgActionType" class="deployToolTip control-label col-xs-2">
                            Action:
                        </label>
                        <div class="col-md-4">
                            <select class="form-control" name="asgActionType">
                                <option value="grow">Scale Up</option>
                                <option value="shrink">Scale Down</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="awsMetrics" class="deployToolTip control-label col-xs-2" data-toggle="tooltip"
                            title="Select an Amazon CloudWatch metric">
                            AWS Metric:
                        </label>
                        <div class="col-md-7">
                            <select class="form-control" name="awsMetrics" v-model="metrics" @change="showWarningIfNeeded">
                                <option disabled value="">Select an AWS CloudWatch Metric</option>
                                <option v-for="option in awsMetricNames" :value="option">[[ option ]]</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="newEntryValue" class="deployToolTip control-label col-xs-2"
                            title="You can provide a custom metric from OpenTSDB, e.g. avg:stats.gauges.deployagenttest.metric">
                            Custom Metric (works with simple scaling only):
                        </label>
                        <div class="col-md-8">
                            <input type="checkbox" name="customUrlCheckbox" v-model="useCustomMetric" />
                            Check to create custom metric URL
                            <div v-show="useCustomMetric">
                                <div class="input-group">
                                    <input class="form-control" name="metricUrl" size="66" type="text" value="" />
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-xs-2">Simple Scaling</label>
                        <input class="col-xs-1" type="radio" name="policyType" value="simple-scaling">
                        <label class="col-xs-2">Step Scaling</label>
                        <input class="col-xs-1" type="radio" name="policyType" value="step-scaling">
                    </div>

                    <div class="form-group">
                        <label for="value" class="deployToolTip control-label col-xs-2" data-toggle="tooltip">
                            When the metric:
                        </label>

                        <div class="col-xs-2">
                            <select class="form-control" name="comparators" v-model="comparator" @change="showWarningIfNeeded">
                                <option v-for="cmp in comparators" :value="cmp.value">[[ cmp.symbol ]]</option>
                            </select>
                        </div>
                        <div class="col-xs-2">
                            <input class="form-control" v-model="threshold" @change="showWarningIfNeeded" name="threshold" required="true" type="text" />
                        </div>
                        <label class="deployToolTip control-label text-center col-xs-1">for</label>
                        <div class="col-xs-2">
                            <input class="form-control" name="evaluate_time" required="true" type="text" value="" />
                        </div>
                        <label class="deployToolTip control-label text-center col-xs-1">
                            minutes.
                        </label>
                    </div>
                    <form-warning v-show="showWarning" :alert-text="warning"></form-warning>
                </div>
                <div class="modal-footer">
                    <button id="addMetricBtnId" type="submit" class="btn btn-primary">Add</button>
                    <button id="modalCloseBtnId" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
                {% csrf_token %}
            </form>
        </div>
    </div>
</div>

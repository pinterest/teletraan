{% load utils %}
{% load static %}
<div class="panel-body table-responsive">
    <table id="baseImageEventsTableId" class="table table-condensed table-striped table-hover">
        <tr>
            <th></th>
            <th class="col-lg-2">Cluster Name</th>
            <th class="col-lg-2">From Image</th>
            <th class="col-lg-2">To Image</th>
            <th class="col-lg-1">Status</th>
            <th class="col-lg-2">Create Time</th>
            <th class="col-lg-2">Start Time</th>
            <th class="col-lg-2">Finish Time</th>
            <th class="col-lg-2">Error Message</th>
        </tr>
        {% for base_images_event in base_images_events %}
        <tr>
            <td>
                {% if base_images_event.status == "SUCCEEDED" %}
                    <input type="radio" id="select_{{forloop.counter}}" name="ami_radio">
                    <input class="id" type="hidden"
                        value="{{ base_images_event.old_image_id }}"/>
                    <input class="configInfo" type="hidden"
                        value="{{ current_cluster }}"/>
                {% endif %}
            </td>
            <td>
                <a id="listGroupsBtnId" href="/groups/{{ base_images_event.cluster_name }}"
                    title="Click to see image update events">
                    {{ base_images_event.cluster_name }}
                </a>
            </td>
            <td> {{ base_images_event.old_image_id }} </td>
            <td> {{ base_images_event.new_image_id }} </td>
            <td> {{ base_images_event.status }} </td>
            <td> {{ base_images_event.create_time|convertTimestamp }} </td>
            <td> {{ base_images_event.start_time|convertTimestamp }} </td>
            <td> {{ base_images_event.finish_time|convertTimestamp }} </td>
            <td> {{ base_images_event.error_message }} </td>
        </tr>
        {% endfor %}
    </table>
    <div class="panel-footer clearfix">
        <div class="pull-left">
            <button id="rollbackItButton" type="button" class="btn btn-primary" title="Rollback to the picked From Image">Rollback to the selected From Image</button>
        </div>
    </div>
</div>

<div class="modal fade" id="rollbackConfirm" tabindex="-1" role="dialog"
     aria-labelledby="saveEntryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="saveEntryFormId" class="form-horizontal" method="post" role="form">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span
                            aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                    </button>
                    <h4 class="modal-title" id="saveEnvModalLabel">Save New {{ panelTitle }}</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to <strong>rollback to the selected From Image</strong> for this cluster?<br>
                </div>
                <div class="modal-footer">
                    <button id="rollbackTrigger" type="button" class="btn btn-primary">Yes</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    $(function () {
        $('#rollbackItButton').click(function () {
            $('#rollbackConfirm').modal()
        });

        $('#rollbackTrigger').click(function () {
            $('#rollbackConfirm').modal('hide');
            var btn = $('#rollbackItButton');
            trid = $("#baseImageEventsTableId input[name=ami_radio]:checked").closest('tr');
            id = trid.find(".id").val();
            info = trid.find(".configInfo").val();
            info['baseImageId'] = id;
            info['autoUpdateBaseImage'] = false;
            console.log('info:', info);
            console.log('info:', info.replace(/u'(?=[^:]+')/g, "'"));
            console.log('info:', JSON.stringify(info.replace(/u'(?=[^:]+')/g, "'")));
            $.ajax({
                type: 'POST',
                url: '/env/{{ env.envName }}/{{ env.stageName }}/config/cluster/config/',
                data: JSON.stringify(info.replace(/u'(?=[^:]+')/g, "'")),
                dataType: 'json',
                beforeSend: function(xhr, settings) {
                    var csrftoken = getCookie('csrftoken')
                    xhr.setRequestHeader("X-CSRFToken", csrftoken);
                    btn.button('rollback in progress');
                },
                success: function(data) {
                    globalNotificationBanner.info = "Request sent successfully";
                    btn.button('Rollback to the selected From Image');
                    window.location.href=window.location.href;
                },
                error: function(data) {
                    globalNotificationBanner.error = ["Request Error: ", data.status, data.statusText, data.responseText].join(' ');
                }
            });
        });
    });
</script>
#!/bin/bash

# ----------------------
# Check for dependencies
# ----------------------

function check_dependencies() {
	# check tmux is installed
	if [ ! `which tmux` ]; then
		echo "Please install tmux:"
	    echo "brew install tmux"
	    exit 1
	fi

	# check mysql.server is installed
    if [[ ! `which mysql.server` ]]; then
    	echo "Please ensure mysql.server is set in PATH (~/.bash_profile)"
    	echo 'export PATH=$PATH:/usr/local/mysql-5.6.26-osx10.8-x86_64/support-files/'
    	exit 1
    fi

    # check mysql.server is started
    mysql.server status
	if [ $? -ne 0 ]; then
		echo "Please start mysql.server:"
		echo "mysql.server start"	
		exit 1
	fi

	# check for GIT_DIR or ~/code
	if [[ -n ${GIT_DIR+1} ]]; then
	    GIT_DIR=$GIT_DIR 
	elif [ -d ~/code ]; then
		GIT_DIR="${HOME}"/code
	else
	    echo "Please set the alias for your GIT_DIR"
	    echo "export GIT_DIR=/path/to/pinterest/codebase"
	    exit 1
	fi

	# check for TEL_VENV or ~/venv; the $TEL_VENV dir should contain bin/activate
	if [[ -n ${TEL_VENV+1} ]]; then
	    TEL_VENV=$TEL_VENV 
	elif [ -d ~/venv ]; then
		TEL_VENV='~/venv'
	else
		echo "Please set the alias for your teletraan python virtual environment (TEL_VENV should contain bin/activate)"
	    echo "export TEL_VENV=/path/to/teletraan_virtual_env"
	    exit 1
	fi

	# check if /tmp/deployservice exists and create it
    if [ ! -d /tmp/deployservice ]; then
    	mkdir /tmp/deployservice
    fi
	# check if /tmp/deploy_board exists and create it
    if [ ! -d "/tmp/deploy_board" ]; then
		mkdir /tmp/deploy_board
	fi

	export CFLAGS=-I/usr/local/include/

    if [ -d "${GIT_DIR}"/devtools/deploy-mix ]; then
		echo "found $GIT_DIR/devtools/deploy-mix"
	fi
}

function start_tmux() {
	# ----------------------
	# Start TMUX
	# ----------------------
	tmux start-server

	# Kill any old session.  Don't exit on fail since kill-session is expected to fail if there is no old session.
	set +e
	tmux kill-session -t teletraan 
	set -e

	if [[ -z "$TMUX" ]]; then
	# if not in tmux, start session and load config
	    tmux new-session -d -s teletraan #-n Instructions
	    tmux source-file teletraan.tmux.conf
	else
	# else, unset $TMUX to be able to start the server, then reset it. do not load config.
	    TMUX_TEMP=$TMUX
	    TMUX=
	    tmux new-session -d -s teletraan #-n Instructions
	    TMUX=$TMUX_TEMP
	    unset TMUX_TEMP
	fi
}

function tmux_windows() {
	echo "Starting Teletraan Processes ... one moment please ..."

	# ----------------------
	# Teletraan Local Server
	# ----------------------
	tmux new-window -t teletraan -n TeleLocalServer
	tmux send-keys -t teletraan:TeleLocalServer "cd $GIT_DIR/teletraan" C-m
	tmux send-keys -t teletraan:TeleLocalServer " ./deploy-service/teletraanservice/bin/run.sh run" C-m

	# ----------------------
	# Start Deploy-board
	# ----------------------
	tmux new-window -t teletraan -n DeployBoard
	tmux send-keys -t teletraan:DeployBoard "source $TEL_VENV/bin/activate" C-m
	tmux send-keys -t teletraan:DeployBoard "cd $GIT_DIR/teletraan/deploy-board" C-m
	tmux send-keys -t teletraan:DeployBoard "./run.sh run" C-m
}

function attach_tmux() {
	if [[ -z "$TMUX" ]]; then
	# if not in tmux, attach to the server.
	    tmux attach-session -t teletraan
	else
	# else links windows to current session.
	    tmux link-window -s teletraan:TeleLocalServer
	    tmux link-window -s teletraan:DeployBoard
	    tmux link-window -s teletraan:TeleAgent
	    tmux link-window -s teletraan:DevtoolsAgent
	    tmux join-pane -s TeleLocalServer -t DeployBoard
	    tmux join-pane -s TeleAgent -t DeployBoard
	    tmux join-pane -s DevtoolsAgent -t DeployBoard
	    tmux kill-session -t teletraan
	fi
}

check_dependencies
start_tmux
tmux_windows
attach_tmux

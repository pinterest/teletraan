#
# Dropwizard server configs. refer
# http://www.dropwizard.io/0.9.1/docs/manual/configuration.html
# for details.
#
server:
  applicationConnectors:
    - type: http
      port: 8080
  adminConnectors:
    - type: http
      port: 8081
  requestLog:
    appenders:
      - type: file
        threshold: ALL
        archive: false
        currentLogFilename: /tmp/teletraan/access.log
        timeZone: UTC
  registerDefaultExceptionMappers: false

#
# Logging settings. refer
# http://www.dropwizard.io/0.9.1/docs/manual/configuration.html
# for details.
#
logging:
  level: INFO
  loggers:
    "com.pinterest.teletraan": DEBUG
    "com.pinterest.deployservice": DEBUG
  appenders:
    - type: file
      timeZone: UTC
      threshold: DEBUG
      archive: false
      currentLogFilename: /tmp/teletraan/service.log
    - type: console
      threshold: ALL
      timeZone: UTC
      target: stdout


#
# Mysql connection config. By default, we use the real mysql as the backend.
# Note: the embeded mysql is for demo or test purpose only. Use the official Mysql
# installs for production usage.
#
db:
  # DB backend type. Allowed values are: embedded, mysql.
  type: mysql

  # Mysql instance configurations
  host: ${TELETRAAN_DB_HOST:-localhost}
  port: 3306
  userName: root
  password:

  # Connection pool size string, in the format of
  # initialSize:maxActive:maxIdle:minIdle.
  pool: 10:50:20:5

  # Uncomment the following to use the embedded mysql.
  #type: embedded

  # Optional - embedded mysql working directory. This is for embedded mysql only,
  # default is /tmp/teletraan/db.
  # Sometimes when the embedded mysql failed to start for whatever the reasons,
  # delete the working dir often resolve the issue.
  #workDir: /tmp/teletraan/db

#
# OAuth based Authentication: by default is disabled.
#
#authentication:
  # (Required)Authentication type: allowed values are token, anonymous. The Token based authentication
  # follows the OAuth 2.0 protocol. See documentations for more details.
  # Note: anonymous authentication is the same as disable authentication all together
  #type: token

  # (Required)OAuth provider URI to retrieve user information
  #userDataUrl: https://www.googleapis.com/oauth2/v3/userinfo

  # (Optional)The name of the field in the returned userinfo map which value will be used as username.
  # If the field is inside a nested userinfo map, use space-separated field names, e.g. "user email"
  #userNameKey: email

  # (Optional)If username is email address, use the part before @ as the final username
  #extractUserNameFromEmail: True

  # (Optional)OAuth token cache
  #tokenCacheSpec: maximumSize=1000,expireAfterWrite=10m

#
# Token based Authorization: by default is disabled.
#
#authorization:
  # Authorization type: allowed values are role, open. See documentations for more details.
  # Note: open authorization is the same as disable authorization all together
  #type: role

  # Optional. token cache
  #roleCacheSpec: maximumSize=10000, expireAfterAccess=10m

#
# Source Code Management settings: by default is disabled.
# Uncomment the following to get better UI support, such as showing commit info,
# deploy diffs and etc. See documentations for more details.
# Currently Teletraan supports Github and Phabricator. Uncommment one of the
# following sections to enable the SCM support.
#
#scm:
  #type: github
  #token:
  #apiPrefix: https://api.github.com
  #urlPrefix: https://github.com

  #type: phabricator
  #urlPrefix: https://phabricator.sample.com
  #arc: /usr/local/bin/arc
  #arcrc: /root/.arcrc

#
# Chat application settings: by default is disabled.
# Uncomment the following to allow Teletran send deploy state changes notify and other
# informations to chatrooms. See documentations for more details.
# Currently Teletraan supports Slack and Hipchat
#
#chat:
  #type: slack
  #url: https://hooks.slack.com/services/....

  #type: hipchat
  #token:

#
# Email notify settings
# Uncomment the following if needs to send config changes and deploy state changes
# through emails. Currently Teletraan could only work with localhost SMTP service.
#
#email:
  #type: smtp
  #adminAddress: x@y.com

#
# Miscellaneous settings of the system
#
system:
  # Teletraan needs to refer Deploy Dashboard url in its notify etc.
  dashboardUrl: ${TELETRAAN_DASHBOARD_URL:-http://localhost:8888}
  # Display full stack trace or just the error to user.
  #clientError: long|short

#External Alerts
externalAlerts:
  factory: com.pinterest.deployservice.alerts.PinterestExternalAlertFactory
#
# Worker settings: disable all the workers if you do not want to run
# workers together with the service. See documentations for more details.
#
workers:
  # StateTransitioner looks for active deploys, set deploy status and
  # transition deploys to their next states.
  - name: StateTransitioner
    properties:
      initialDelay: 10
      period: 30

  # AutoPromoter provides the Auto Deploy support. It finds the deploy
  # cadidates from preceeding stage and promote them to next stages.
  - name: AutoPromoter
    properties:
      initialDelay: 20
      period: 30

  # AgentJanitor cleans up any obsoleted hosts or agents records
  - name: SimpleAgentJanitor
    properties:
      initialDelay: 30
      period: 300
      minStaleHostThreshold: 150
      maxStaleHostThreshold: 600

# Ping Requst validators:
# pingrequestvalidators:
#  -  com.pinterest.deployservice.pingrequests.Ec2InstanceValidator
